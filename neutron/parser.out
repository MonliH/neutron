Grammar:

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> kword_declaration
Rule 4     statement -> variable_assignment
Rule 5     statement -> python_code_stmt
Rule 6     statement -> class_attribute_assignment
Rule 7     statement -> function_call_stmt
Rule 8     statement -> class_declaration
Rule 9     statement -> function_declaration
Rule 10    function_call_stmt -> function_call ;
Rule 11    python_code_stmt -> python_code ;
Rule 12    function_call -> expression ( empty )
Rule 13    function_call -> expression ( function_arguments )
Rule 14    function_declaration -> FUNC ID ( empty ) { program }
Rule 15    function_declaration -> FUNC ID ( function_arguments ) { program }
Rule 16    kword_declaration -> KWORD ID ( empty ) { program }
Rule 17    kword_declaration -> KWORD ID ( function_arguments ) { program }
Rule 18    function_arguments -> kwargs
Rule 19    function_arguments -> positional_args , kwargs
Rule 20    function_arguments -> positional_args
Rule 21    class_declaration -> CLASS ID { program }
Rule 22    positional_args -> expression
Rule 23    positional_args -> positional_args , expression
Rule 24    kwargs -> ID = expression
Rule 25    kwargs -> kwargs , id = expression
Rule 26    variable_assignment -> ID = expression ;
Rule 27    class_attribute_assignment -> class_attribute = expression ;
Rule 28    expression -> class_attribute
Rule 29    expression -> id
Rule 30    expression -> string
Rule 31    expression -> bool
Rule 32    expression -> float
Rule 33    expression -> int
Rule 34    expression -> function_call
Rule 35    expression -> python_code
Rule 36    expression -> ( expression )
Rule 37    expression -> expression > expression  [precedence=left, level=4]
Rule 38    expression -> expression < expression  [precedence=left, level=4]
Rule 39    expression -> ! expression  [precedence=right, level=8]
Rule 40    expression -> expression & expression  [precedence=left, level=2]
Rule 41    expression -> expression | expression  [precedence=left, level=1]
Rule 42    expression -> expression EQ_GREATER expression  [precedence=left, level=4]
Rule 43    expression -> expression EQ_LESS expression  [precedence=left, level=4]
Rule 44    expression -> expression EQEQ expression  [precedence=left, level=3]
Rule 45    expression -> expression % expression  [precedence=left, level=6]
Rule 46    expression -> expression * expression  [precedence=left, level=6]
Rule 47    expression -> expression / expression  [precedence=left, level=6]
Rule 48    expression -> expression - expression  [precedence=left, level=5]
Rule 49    expression -> expression + expression  [precedence=left, level=5]
Rule 50    expression -> + expression  [precedence=right, level=7]
Rule 51    expression -> - expression  [precedence=right, level=7]
Rule 52    int -> INT
Rule 53    string -> STRING
Rule 54    float -> FLOAT
Rule 55    bool -> FALSE
Rule 56    bool -> TRUE
Rule 57    class_attribute -> expression COLON_COLON ID
Rule 58    id -> ID
Rule 59    python_code -> PYTHON_CODE
Rule 60    empty -> <empty>

Unused terminals:

    IF
    NOT_EQEQ
    ELSE
    ID_INTERNAL
    ELSIF

Terminals, with rules where they appear:

!                    : 39
%                    : 45
&                    : 40
(                    : 12 13 14 15 16 17 36
)                    : 12 13 14 15 16 17 36
*                    : 46
+                    : 49 50
,                    : 19 23 25
-                    : 48 51
/                    : 47
;                    : 10 11 26 27
<                    : 38
=                    : 24 25 26 27
>                    : 37
CLASS                : 21
COLON_COLON          : 57
ELSE                 : 
ELSIF                : 
EQEQ                 : 44
EQ_GREATER           : 42
EQ_LESS              : 43
FALSE                : 55
FLOAT                : 54
FUNC                 : 14 15
ID                   : 14 15 16 17 21 24 26 57 58
ID_INTERNAL          : 
IF                   : 
INT                  : 52
KWORD                : 16 17
NOT_EQEQ             : 
PYTHON_CODE          : 59
STRING               : 53
TRUE                 : 56
error                : 
{                    : 14 15 16 17 21
|                    : 41
}                    : 14 15 16 17 21

Nonterminals, with rules where they appear:

bool                 : 31
class_attribute      : 27 28
class_attribute_assignment : 6
class_declaration    : 8
empty                : 12 14 16
expression           : 12 13 22 23 24 25 26 27 36 37 37 38 38 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 51 57
float                : 32
function_arguments   : 13 15 17
function_call        : 10 34
function_call_stmt   : 7
function_declaration : 9
id                   : 25 29
int                  : 33
kwargs               : 18 19 25
kword_declaration    : 3
positional_args      : 19 20 23
program              : 2 14 15 16 17 21 0
python_code          : 11 35
python_code_stmt     : 5
statement            : 1 2
string               : 30
variable_assignment  : 4


state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . kword_declaration
    (4) statement -> . variable_assignment
    (5) statement -> . python_code_stmt
    (6) statement -> . class_attribute_assignment
    (7) statement -> . function_call_stmt
    (8) statement -> . class_declaration
    (9) statement -> . function_declaration
    (16) kword_declaration -> . KWORD ID ( empty ) { program }
    (17) kword_declaration -> . KWORD ID ( function_arguments ) { program }
    (26) variable_assignment -> . ID = expression ;
    (11) python_code_stmt -> . python_code ;
    (27) class_attribute_assignment -> . class_attribute = expression ;
    (10) function_call_stmt -> . function_call ;
    (21) class_declaration -> . CLASS ID { program }
    (14) function_declaration -> . FUNC ID ( empty ) { program }
    (15) function_declaration -> . FUNC ID ( function_arguments ) { program }
    (59) python_code -> . PYTHON_CODE
    (57) class_attribute -> . expression COLON_COLON ID
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    KWORD           shift and go to state 10
    ID              shift and go to state 11
    CLASS           shift and go to state 17
    FUNC            shift and go to state 18
    PYTHON_CODE     shift and go to state 19
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32

    program                        shift and go to state 1
    statement                      shift and go to state 2
    kword_declaration              shift and go to state 3
    variable_assignment            shift and go to state 4
    python_code_stmt               shift and go to state 5
    class_attribute_assignment     shift and go to state 6
    function_call_stmt             shift and go to state 7
    class_declaration              shift and go to state 8
    function_declaration           shift and go to state 9
    expression                     shift and go to state 13
    python_code                    shift and go to state 14
    class_attribute                shift and go to state 15
    function_call                  shift and go to state 16
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . kword_declaration
    (4) statement -> . variable_assignment
    (5) statement -> . python_code_stmt
    (6) statement -> . class_attribute_assignment
    (7) statement -> . function_call_stmt
    (8) statement -> . class_declaration
    (9) statement -> . function_declaration
    (16) kword_declaration -> . KWORD ID ( empty ) { program }
    (17) kword_declaration -> . KWORD ID ( function_arguments ) { program }
    (26) variable_assignment -> . ID = expression ;
    (11) python_code_stmt -> . python_code ;
    (27) class_attribute_assignment -> . class_attribute = expression ;
    (10) function_call_stmt -> . function_call ;
    (21) class_declaration -> . CLASS ID { program }
    (14) function_declaration -> . FUNC ID ( empty ) { program }
    (15) function_declaration -> . FUNC ID ( function_arguments ) { program }
    (59) python_code -> . PYTHON_CODE
    (57) class_attribute -> . expression COLON_COLON ID
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    KWORD           shift and go to state 10
    ID              shift and go to state 11
    CLASS           shift and go to state 17
    FUNC            shift and go to state 18
    PYTHON_CODE     shift and go to state 19
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32

    statement                      shift and go to state 33
    kword_declaration              shift and go to state 3
    variable_assignment            shift and go to state 4
    python_code_stmt               shift and go to state 5
    class_attribute_assignment     shift and go to state 6
    function_call_stmt             shift and go to state 7
    class_declaration              shift and go to state 8
    function_declaration           shift and go to state 9
    expression                     shift and go to state 13
    python_code                    shift and go to state 14
    class_attribute                shift and go to state 15
    function_call                  shift and go to state 16
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24

state 2

    (1) program -> statement .
    KWORD           reduce using rule 1 (program -> statement .)
    ID              reduce using rule 1 (program -> statement .)
    CLASS           reduce using rule 1 (program -> statement .)
    FUNC            reduce using rule 1 (program -> statement .)
    PYTHON_CODE     reduce using rule 1 (program -> statement .)
    (               reduce using rule 1 (program -> statement .)
    !               reduce using rule 1 (program -> statement .)
    +               reduce using rule 1 (program -> statement .)
    -               reduce using rule 1 (program -> statement .)
    STRING          reduce using rule 1 (program -> statement .)
    FALSE           reduce using rule 1 (program -> statement .)
    TRUE            reduce using rule 1 (program -> statement .)
    FLOAT           reduce using rule 1 (program -> statement .)
    INT             reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)
    }               reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> kword_declaration .
    KWORD           reduce using rule 3 (statement -> kword_declaration .)
    ID              reduce using rule 3 (statement -> kword_declaration .)
    CLASS           reduce using rule 3 (statement -> kword_declaration .)
    FUNC            reduce using rule 3 (statement -> kword_declaration .)
    PYTHON_CODE     reduce using rule 3 (statement -> kword_declaration .)
    (               reduce using rule 3 (statement -> kword_declaration .)
    !               reduce using rule 3 (statement -> kword_declaration .)
    +               reduce using rule 3 (statement -> kword_declaration .)
    -               reduce using rule 3 (statement -> kword_declaration .)
    STRING          reduce using rule 3 (statement -> kword_declaration .)
    FALSE           reduce using rule 3 (statement -> kword_declaration .)
    TRUE            reduce using rule 3 (statement -> kword_declaration .)
    FLOAT           reduce using rule 3 (statement -> kword_declaration .)
    INT             reduce using rule 3 (statement -> kword_declaration .)
    $end            reduce using rule 3 (statement -> kword_declaration .)
    }               reduce using rule 3 (statement -> kword_declaration .)


state 4

    (4) statement -> variable_assignment .
    KWORD           reduce using rule 4 (statement -> variable_assignment .)
    ID              reduce using rule 4 (statement -> variable_assignment .)
    CLASS           reduce using rule 4 (statement -> variable_assignment .)
    FUNC            reduce using rule 4 (statement -> variable_assignment .)
    PYTHON_CODE     reduce using rule 4 (statement -> variable_assignment .)
    (               reduce using rule 4 (statement -> variable_assignment .)
    !               reduce using rule 4 (statement -> variable_assignment .)
    +               reduce using rule 4 (statement -> variable_assignment .)
    -               reduce using rule 4 (statement -> variable_assignment .)
    STRING          reduce using rule 4 (statement -> variable_assignment .)
    FALSE           reduce using rule 4 (statement -> variable_assignment .)
    TRUE            reduce using rule 4 (statement -> variable_assignment .)
    FLOAT           reduce using rule 4 (statement -> variable_assignment .)
    INT             reduce using rule 4 (statement -> variable_assignment .)
    $end            reduce using rule 4 (statement -> variable_assignment .)
    }               reduce using rule 4 (statement -> variable_assignment .)


state 5

    (5) statement -> python_code_stmt .
    KWORD           reduce using rule 5 (statement -> python_code_stmt .)
    ID              reduce using rule 5 (statement -> python_code_stmt .)
    CLASS           reduce using rule 5 (statement -> python_code_stmt .)
    FUNC            reduce using rule 5 (statement -> python_code_stmt .)
    PYTHON_CODE     reduce using rule 5 (statement -> python_code_stmt .)
    (               reduce using rule 5 (statement -> python_code_stmt .)
    !               reduce using rule 5 (statement -> python_code_stmt .)
    +               reduce using rule 5 (statement -> python_code_stmt .)
    -               reduce using rule 5 (statement -> python_code_stmt .)
    STRING          reduce using rule 5 (statement -> python_code_stmt .)
    FALSE           reduce using rule 5 (statement -> python_code_stmt .)
    TRUE            reduce using rule 5 (statement -> python_code_stmt .)
    FLOAT           reduce using rule 5 (statement -> python_code_stmt .)
    INT             reduce using rule 5 (statement -> python_code_stmt .)
    $end            reduce using rule 5 (statement -> python_code_stmt .)
    }               reduce using rule 5 (statement -> python_code_stmt .)


state 6

    (6) statement -> class_attribute_assignment .
    KWORD           reduce using rule 6 (statement -> class_attribute_assignment .)
    ID              reduce using rule 6 (statement -> class_attribute_assignment .)
    CLASS           reduce using rule 6 (statement -> class_attribute_assignment .)
    FUNC            reduce using rule 6 (statement -> class_attribute_assignment .)
    PYTHON_CODE     reduce using rule 6 (statement -> class_attribute_assignment .)
    (               reduce using rule 6 (statement -> class_attribute_assignment .)
    !               reduce using rule 6 (statement -> class_attribute_assignment .)
    +               reduce using rule 6 (statement -> class_attribute_assignment .)
    -               reduce using rule 6 (statement -> class_attribute_assignment .)
    STRING          reduce using rule 6 (statement -> class_attribute_assignment .)
    FALSE           reduce using rule 6 (statement -> class_attribute_assignment .)
    TRUE            reduce using rule 6 (statement -> class_attribute_assignment .)
    FLOAT           reduce using rule 6 (statement -> class_attribute_assignment .)
    INT             reduce using rule 6 (statement -> class_attribute_assignment .)
    $end            reduce using rule 6 (statement -> class_attribute_assignment .)
    }               reduce using rule 6 (statement -> class_attribute_assignment .)


state 7

    (7) statement -> function_call_stmt .
    KWORD           reduce using rule 7 (statement -> function_call_stmt .)
    ID              reduce using rule 7 (statement -> function_call_stmt .)
    CLASS           reduce using rule 7 (statement -> function_call_stmt .)
    FUNC            reduce using rule 7 (statement -> function_call_stmt .)
    PYTHON_CODE     reduce using rule 7 (statement -> function_call_stmt .)
    (               reduce using rule 7 (statement -> function_call_stmt .)
    !               reduce using rule 7 (statement -> function_call_stmt .)
    +               reduce using rule 7 (statement -> function_call_stmt .)
    -               reduce using rule 7 (statement -> function_call_stmt .)
    STRING          reduce using rule 7 (statement -> function_call_stmt .)
    FALSE           reduce using rule 7 (statement -> function_call_stmt .)
    TRUE            reduce using rule 7 (statement -> function_call_stmt .)
    FLOAT           reduce using rule 7 (statement -> function_call_stmt .)
    INT             reduce using rule 7 (statement -> function_call_stmt .)
    $end            reduce using rule 7 (statement -> function_call_stmt .)
    }               reduce using rule 7 (statement -> function_call_stmt .)


state 8

    (8) statement -> class_declaration .
    KWORD           reduce using rule 8 (statement -> class_declaration .)
    ID              reduce using rule 8 (statement -> class_declaration .)
    CLASS           reduce using rule 8 (statement -> class_declaration .)
    FUNC            reduce using rule 8 (statement -> class_declaration .)
    PYTHON_CODE     reduce using rule 8 (statement -> class_declaration .)
    (               reduce using rule 8 (statement -> class_declaration .)
    !               reduce using rule 8 (statement -> class_declaration .)
    +               reduce using rule 8 (statement -> class_declaration .)
    -               reduce using rule 8 (statement -> class_declaration .)
    STRING          reduce using rule 8 (statement -> class_declaration .)
    FALSE           reduce using rule 8 (statement -> class_declaration .)
    TRUE            reduce using rule 8 (statement -> class_declaration .)
    FLOAT           reduce using rule 8 (statement -> class_declaration .)
    INT             reduce using rule 8 (statement -> class_declaration .)
    $end            reduce using rule 8 (statement -> class_declaration .)
    }               reduce using rule 8 (statement -> class_declaration .)


state 9

    (9) statement -> function_declaration .
    KWORD           reduce using rule 9 (statement -> function_declaration .)
    ID              reduce using rule 9 (statement -> function_declaration .)
    CLASS           reduce using rule 9 (statement -> function_declaration .)
    FUNC            reduce using rule 9 (statement -> function_declaration .)
    PYTHON_CODE     reduce using rule 9 (statement -> function_declaration .)
    (               reduce using rule 9 (statement -> function_declaration .)
    !               reduce using rule 9 (statement -> function_declaration .)
    +               reduce using rule 9 (statement -> function_declaration .)
    -               reduce using rule 9 (statement -> function_declaration .)
    STRING          reduce using rule 9 (statement -> function_declaration .)
    FALSE           reduce using rule 9 (statement -> function_declaration .)
    TRUE            reduce using rule 9 (statement -> function_declaration .)
    FLOAT           reduce using rule 9 (statement -> function_declaration .)
    INT             reduce using rule 9 (statement -> function_declaration .)
    $end            reduce using rule 9 (statement -> function_declaration .)
    }               reduce using rule 9 (statement -> function_declaration .)


state 10

    (16) kword_declaration -> KWORD . ID ( empty ) { program }
    (17) kword_declaration -> KWORD . ID ( function_arguments ) { program }
    ID              shift and go to state 34


state 11

    (26) variable_assignment -> ID . = expression ;
    (58) id -> ID .
    =               shift and go to state 35
    COLON_COLON     reduce using rule 58 (id -> ID .)
    (               reduce using rule 58 (id -> ID .)
    >               reduce using rule 58 (id -> ID .)
    <               reduce using rule 58 (id -> ID .)
    &               reduce using rule 58 (id -> ID .)
    |               reduce using rule 58 (id -> ID .)
    EQ_GREATER      reduce using rule 58 (id -> ID .)
    EQ_LESS         reduce using rule 58 (id -> ID .)
    EQEQ            reduce using rule 58 (id -> ID .)
    %               reduce using rule 58 (id -> ID .)
    *               reduce using rule 58 (id -> ID .)
    /               reduce using rule 58 (id -> ID .)
    -               reduce using rule 58 (id -> ID .)
    +               reduce using rule 58 (id -> ID .)


state 12

    (36) expression -> ( . expression )
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 36
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 13

    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    COLON_COLON     shift and go to state 41
    (               shift and go to state 42
    >               shift and go to state 43
    <               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46
    EQ_GREATER      shift and go to state 47
    EQ_LESS         shift and go to state 48
    EQEQ            shift and go to state 49
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54


state 14

    (11) python_code_stmt -> python_code . ;
    (35) expression -> python_code .
    ;               shift and go to state 55
    COLON_COLON     reduce using rule 35 (expression -> python_code .)
    (               reduce using rule 35 (expression -> python_code .)
    >               reduce using rule 35 (expression -> python_code .)
    <               reduce using rule 35 (expression -> python_code .)
    &               reduce using rule 35 (expression -> python_code .)
    |               reduce using rule 35 (expression -> python_code .)
    EQ_GREATER      reduce using rule 35 (expression -> python_code .)
    EQ_LESS         reduce using rule 35 (expression -> python_code .)
    EQEQ            reduce using rule 35 (expression -> python_code .)
    %               reduce using rule 35 (expression -> python_code .)
    *               reduce using rule 35 (expression -> python_code .)
    /               reduce using rule 35 (expression -> python_code .)
    -               reduce using rule 35 (expression -> python_code .)
    +               reduce using rule 35 (expression -> python_code .)


state 15

    (27) class_attribute_assignment -> class_attribute . = expression ;
    (28) expression -> class_attribute .
    =               shift and go to state 56
    COLON_COLON     reduce using rule 28 (expression -> class_attribute .)
    (               reduce using rule 28 (expression -> class_attribute .)
    >               reduce using rule 28 (expression -> class_attribute .)
    <               reduce using rule 28 (expression -> class_attribute .)
    &               reduce using rule 28 (expression -> class_attribute .)
    |               reduce using rule 28 (expression -> class_attribute .)
    EQ_GREATER      reduce using rule 28 (expression -> class_attribute .)
    EQ_LESS         reduce using rule 28 (expression -> class_attribute .)
    EQEQ            reduce using rule 28 (expression -> class_attribute .)
    %               reduce using rule 28 (expression -> class_attribute .)
    *               reduce using rule 28 (expression -> class_attribute .)
    /               reduce using rule 28 (expression -> class_attribute .)
    -               reduce using rule 28 (expression -> class_attribute .)
    +               reduce using rule 28 (expression -> class_attribute .)


state 16

    (10) function_call_stmt -> function_call . ;
    (34) expression -> function_call .
    ;               shift and go to state 57
    COLON_COLON     reduce using rule 34 (expression -> function_call .)
    (               reduce using rule 34 (expression -> function_call .)
    >               reduce using rule 34 (expression -> function_call .)
    <               reduce using rule 34 (expression -> function_call .)
    &               reduce using rule 34 (expression -> function_call .)
    |               reduce using rule 34 (expression -> function_call .)
    EQ_GREATER      reduce using rule 34 (expression -> function_call .)
    EQ_LESS         reduce using rule 34 (expression -> function_call .)
    EQEQ            reduce using rule 34 (expression -> function_call .)
    %               reduce using rule 34 (expression -> function_call .)
    *               reduce using rule 34 (expression -> function_call .)
    /               reduce using rule 34 (expression -> function_call .)
    -               reduce using rule 34 (expression -> function_call .)
    +               reduce using rule 34 (expression -> function_call .)


state 17

    (21) class_declaration -> CLASS . ID { program }
    ID              shift and go to state 58


state 18

    (14) function_declaration -> FUNC . ID ( empty ) { program }
    (15) function_declaration -> FUNC . ID ( function_arguments ) { program }
    ID              shift and go to state 59


state 19

    (59) python_code -> PYTHON_CODE .
    ;               reduce using rule 59 (python_code -> PYTHON_CODE .)
    COLON_COLON     reduce using rule 59 (python_code -> PYTHON_CODE .)
    (               reduce using rule 59 (python_code -> PYTHON_CODE .)
    >               reduce using rule 59 (python_code -> PYTHON_CODE .)
    <               reduce using rule 59 (python_code -> PYTHON_CODE .)
    &               reduce using rule 59 (python_code -> PYTHON_CODE .)
    |               reduce using rule 59 (python_code -> PYTHON_CODE .)
    EQ_GREATER      reduce using rule 59 (python_code -> PYTHON_CODE .)
    EQ_LESS         reduce using rule 59 (python_code -> PYTHON_CODE .)
    EQEQ            reduce using rule 59 (python_code -> PYTHON_CODE .)
    %               reduce using rule 59 (python_code -> PYTHON_CODE .)
    *               reduce using rule 59 (python_code -> PYTHON_CODE .)
    /               reduce using rule 59 (python_code -> PYTHON_CODE .)
    -               reduce using rule 59 (python_code -> PYTHON_CODE .)
    +               reduce using rule 59 (python_code -> PYTHON_CODE .)
    )               reduce using rule 59 (python_code -> PYTHON_CODE .)
    ,               reduce using rule 59 (python_code -> PYTHON_CODE .)


state 20

    (29) expression -> id .
    COLON_COLON     reduce using rule 29 (expression -> id .)
    (               reduce using rule 29 (expression -> id .)
    >               reduce using rule 29 (expression -> id .)
    <               reduce using rule 29 (expression -> id .)
    &               reduce using rule 29 (expression -> id .)
    |               reduce using rule 29 (expression -> id .)
    EQ_GREATER      reduce using rule 29 (expression -> id .)
    EQ_LESS         reduce using rule 29 (expression -> id .)
    EQEQ            reduce using rule 29 (expression -> id .)
    %               reduce using rule 29 (expression -> id .)
    *               reduce using rule 29 (expression -> id .)
    /               reduce using rule 29 (expression -> id .)
    -               reduce using rule 29 (expression -> id .)
    +               reduce using rule 29 (expression -> id .)
    )               reduce using rule 29 (expression -> id .)
    ;               reduce using rule 29 (expression -> id .)
    ,               reduce using rule 29 (expression -> id .)


state 21

    (30) expression -> string .
    COLON_COLON     reduce using rule 30 (expression -> string .)
    (               reduce using rule 30 (expression -> string .)
    >               reduce using rule 30 (expression -> string .)
    <               reduce using rule 30 (expression -> string .)
    &               reduce using rule 30 (expression -> string .)
    |               reduce using rule 30 (expression -> string .)
    EQ_GREATER      reduce using rule 30 (expression -> string .)
    EQ_LESS         reduce using rule 30 (expression -> string .)
    EQEQ            reduce using rule 30 (expression -> string .)
    %               reduce using rule 30 (expression -> string .)
    *               reduce using rule 30 (expression -> string .)
    /               reduce using rule 30 (expression -> string .)
    -               reduce using rule 30 (expression -> string .)
    +               reduce using rule 30 (expression -> string .)
    )               reduce using rule 30 (expression -> string .)
    ;               reduce using rule 30 (expression -> string .)
    ,               reduce using rule 30 (expression -> string .)


state 22

    (31) expression -> bool .
    COLON_COLON     reduce using rule 31 (expression -> bool .)
    (               reduce using rule 31 (expression -> bool .)
    >               reduce using rule 31 (expression -> bool .)
    <               reduce using rule 31 (expression -> bool .)
    &               reduce using rule 31 (expression -> bool .)
    |               reduce using rule 31 (expression -> bool .)
    EQ_GREATER      reduce using rule 31 (expression -> bool .)
    EQ_LESS         reduce using rule 31 (expression -> bool .)
    EQEQ            reduce using rule 31 (expression -> bool .)
    %               reduce using rule 31 (expression -> bool .)
    *               reduce using rule 31 (expression -> bool .)
    /               reduce using rule 31 (expression -> bool .)
    -               reduce using rule 31 (expression -> bool .)
    +               reduce using rule 31 (expression -> bool .)
    )               reduce using rule 31 (expression -> bool .)
    ;               reduce using rule 31 (expression -> bool .)
    ,               reduce using rule 31 (expression -> bool .)


state 23

    (32) expression -> float .
    COLON_COLON     reduce using rule 32 (expression -> float .)
    (               reduce using rule 32 (expression -> float .)
    >               reduce using rule 32 (expression -> float .)
    <               reduce using rule 32 (expression -> float .)
    &               reduce using rule 32 (expression -> float .)
    |               reduce using rule 32 (expression -> float .)
    EQ_GREATER      reduce using rule 32 (expression -> float .)
    EQ_LESS         reduce using rule 32 (expression -> float .)
    EQEQ            reduce using rule 32 (expression -> float .)
    %               reduce using rule 32 (expression -> float .)
    *               reduce using rule 32 (expression -> float .)
    /               reduce using rule 32 (expression -> float .)
    -               reduce using rule 32 (expression -> float .)
    +               reduce using rule 32 (expression -> float .)
    )               reduce using rule 32 (expression -> float .)
    ;               reduce using rule 32 (expression -> float .)
    ,               reduce using rule 32 (expression -> float .)


state 24

    (33) expression -> int .
    COLON_COLON     reduce using rule 33 (expression -> int .)
    (               reduce using rule 33 (expression -> int .)
    >               reduce using rule 33 (expression -> int .)
    <               reduce using rule 33 (expression -> int .)
    &               reduce using rule 33 (expression -> int .)
    |               reduce using rule 33 (expression -> int .)
    EQ_GREATER      reduce using rule 33 (expression -> int .)
    EQ_LESS         reduce using rule 33 (expression -> int .)
    EQEQ            reduce using rule 33 (expression -> int .)
    %               reduce using rule 33 (expression -> int .)
    *               reduce using rule 33 (expression -> int .)
    /               reduce using rule 33 (expression -> int .)
    -               reduce using rule 33 (expression -> int .)
    +               reduce using rule 33 (expression -> int .)
    )               reduce using rule 33 (expression -> int .)
    ;               reduce using rule 33 (expression -> int .)
    ,               reduce using rule 33 (expression -> int .)


state 25

    (39) expression -> ! . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 60
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 26

    (51) expression -> - . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 61
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 27

    (50) expression -> + . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 62
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 28

    (53) string -> STRING .
    COLON_COLON     reduce using rule 53 (string -> STRING .)
    (               reduce using rule 53 (string -> STRING .)
    >               reduce using rule 53 (string -> STRING .)
    <               reduce using rule 53 (string -> STRING .)
    &               reduce using rule 53 (string -> STRING .)
    |               reduce using rule 53 (string -> STRING .)
    EQ_GREATER      reduce using rule 53 (string -> STRING .)
    EQ_LESS         reduce using rule 53 (string -> STRING .)
    EQEQ            reduce using rule 53 (string -> STRING .)
    %               reduce using rule 53 (string -> STRING .)
    *               reduce using rule 53 (string -> STRING .)
    /               reduce using rule 53 (string -> STRING .)
    -               reduce using rule 53 (string -> STRING .)
    +               reduce using rule 53 (string -> STRING .)
    )               reduce using rule 53 (string -> STRING .)
    ;               reduce using rule 53 (string -> STRING .)
    ,               reduce using rule 53 (string -> STRING .)


state 29

    (55) bool -> FALSE .
    COLON_COLON     reduce using rule 55 (bool -> FALSE .)
    (               reduce using rule 55 (bool -> FALSE .)
    >               reduce using rule 55 (bool -> FALSE .)
    <               reduce using rule 55 (bool -> FALSE .)
    &               reduce using rule 55 (bool -> FALSE .)
    |               reduce using rule 55 (bool -> FALSE .)
    EQ_GREATER      reduce using rule 55 (bool -> FALSE .)
    EQ_LESS         reduce using rule 55 (bool -> FALSE .)
    EQEQ            reduce using rule 55 (bool -> FALSE .)
    %               reduce using rule 55 (bool -> FALSE .)
    *               reduce using rule 55 (bool -> FALSE .)
    /               reduce using rule 55 (bool -> FALSE .)
    -               reduce using rule 55 (bool -> FALSE .)
    +               reduce using rule 55 (bool -> FALSE .)
    )               reduce using rule 55 (bool -> FALSE .)
    ;               reduce using rule 55 (bool -> FALSE .)
    ,               reduce using rule 55 (bool -> FALSE .)


state 30

    (56) bool -> TRUE .
    COLON_COLON     reduce using rule 56 (bool -> TRUE .)
    (               reduce using rule 56 (bool -> TRUE .)
    >               reduce using rule 56 (bool -> TRUE .)
    <               reduce using rule 56 (bool -> TRUE .)
    &               reduce using rule 56 (bool -> TRUE .)
    |               reduce using rule 56 (bool -> TRUE .)
    EQ_GREATER      reduce using rule 56 (bool -> TRUE .)
    EQ_LESS         reduce using rule 56 (bool -> TRUE .)
    EQEQ            reduce using rule 56 (bool -> TRUE .)
    %               reduce using rule 56 (bool -> TRUE .)
    *               reduce using rule 56 (bool -> TRUE .)
    /               reduce using rule 56 (bool -> TRUE .)
    -               reduce using rule 56 (bool -> TRUE .)
    +               reduce using rule 56 (bool -> TRUE .)
    )               reduce using rule 56 (bool -> TRUE .)
    ;               reduce using rule 56 (bool -> TRUE .)
    ,               reduce using rule 56 (bool -> TRUE .)


state 31

    (54) float -> FLOAT .
    COLON_COLON     reduce using rule 54 (float -> FLOAT .)
    (               reduce using rule 54 (float -> FLOAT .)
    >               reduce using rule 54 (float -> FLOAT .)
    <               reduce using rule 54 (float -> FLOAT .)
    &               reduce using rule 54 (float -> FLOAT .)
    |               reduce using rule 54 (float -> FLOAT .)
    EQ_GREATER      reduce using rule 54 (float -> FLOAT .)
    EQ_LESS         reduce using rule 54 (float -> FLOAT .)
    EQEQ            reduce using rule 54 (float -> FLOAT .)
    %               reduce using rule 54 (float -> FLOAT .)
    *               reduce using rule 54 (float -> FLOAT .)
    /               reduce using rule 54 (float -> FLOAT .)
    -               reduce using rule 54 (float -> FLOAT .)
    +               reduce using rule 54 (float -> FLOAT .)
    )               reduce using rule 54 (float -> FLOAT .)
    ;               reduce using rule 54 (float -> FLOAT .)
    ,               reduce using rule 54 (float -> FLOAT .)


state 32

    (52) int -> INT .
    COLON_COLON     reduce using rule 52 (int -> INT .)
    (               reduce using rule 52 (int -> INT .)
    >               reduce using rule 52 (int -> INT .)
    <               reduce using rule 52 (int -> INT .)
    &               reduce using rule 52 (int -> INT .)
    |               reduce using rule 52 (int -> INT .)
    EQ_GREATER      reduce using rule 52 (int -> INT .)
    EQ_LESS         reduce using rule 52 (int -> INT .)
    EQEQ            reduce using rule 52 (int -> INT .)
    %               reduce using rule 52 (int -> INT .)
    *               reduce using rule 52 (int -> INT .)
    /               reduce using rule 52 (int -> INT .)
    -               reduce using rule 52 (int -> INT .)
    +               reduce using rule 52 (int -> INT .)
    )               reduce using rule 52 (int -> INT .)
    ;               reduce using rule 52 (int -> INT .)
    ,               reduce using rule 52 (int -> INT .)


state 33

    (2) program -> program statement .
    KWORD           reduce using rule 2 (program -> program statement .)
    ID              reduce using rule 2 (program -> program statement .)
    CLASS           reduce using rule 2 (program -> program statement .)
    FUNC            reduce using rule 2 (program -> program statement .)
    PYTHON_CODE     reduce using rule 2 (program -> program statement .)
    (               reduce using rule 2 (program -> program statement .)
    !               reduce using rule 2 (program -> program statement .)
    +               reduce using rule 2 (program -> program statement .)
    -               reduce using rule 2 (program -> program statement .)
    STRING          reduce using rule 2 (program -> program statement .)
    FALSE           reduce using rule 2 (program -> program statement .)
    TRUE            reduce using rule 2 (program -> program statement .)
    FLOAT           reduce using rule 2 (program -> program statement .)
    INT             reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)
    }               reduce using rule 2 (program -> program statement .)


state 34

    (16) kword_declaration -> KWORD ID . ( empty ) { program }
    (17) kword_declaration -> KWORD ID . ( function_arguments ) { program }
    (               shift and go to state 63


state 35

    (26) variable_assignment -> ID = . expression ;
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 64
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 36

    (36) expression -> ( expression . )
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    )               shift and go to state 65
    >               shift and go to state 43
    <               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46
    EQ_GREATER      shift and go to state 47
    EQ_LESS         shift and go to state 48
    EQEQ            shift and go to state 49
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54
    COLON_COLON     shift and go to state 41
    (               shift and go to state 42


state 37

    (28) expression -> class_attribute .
    )               reduce using rule 28 (expression -> class_attribute .)
    >               reduce using rule 28 (expression -> class_attribute .)
    <               reduce using rule 28 (expression -> class_attribute .)
    &               reduce using rule 28 (expression -> class_attribute .)
    |               reduce using rule 28 (expression -> class_attribute .)
    EQ_GREATER      reduce using rule 28 (expression -> class_attribute .)
    EQ_LESS         reduce using rule 28 (expression -> class_attribute .)
    EQEQ            reduce using rule 28 (expression -> class_attribute .)
    %               reduce using rule 28 (expression -> class_attribute .)
    *               reduce using rule 28 (expression -> class_attribute .)
    /               reduce using rule 28 (expression -> class_attribute .)
    -               reduce using rule 28 (expression -> class_attribute .)
    +               reduce using rule 28 (expression -> class_attribute .)
    COLON_COLON     reduce using rule 28 (expression -> class_attribute .)
    (               reduce using rule 28 (expression -> class_attribute .)
    ;               reduce using rule 28 (expression -> class_attribute .)
    ,               reduce using rule 28 (expression -> class_attribute .)


state 38

    (34) expression -> function_call .
    )               reduce using rule 34 (expression -> function_call .)
    >               reduce using rule 34 (expression -> function_call .)
    <               reduce using rule 34 (expression -> function_call .)
    &               reduce using rule 34 (expression -> function_call .)
    |               reduce using rule 34 (expression -> function_call .)
    EQ_GREATER      reduce using rule 34 (expression -> function_call .)
    EQ_LESS         reduce using rule 34 (expression -> function_call .)
    EQEQ            reduce using rule 34 (expression -> function_call .)
    %               reduce using rule 34 (expression -> function_call .)
    *               reduce using rule 34 (expression -> function_call .)
    /               reduce using rule 34 (expression -> function_call .)
    -               reduce using rule 34 (expression -> function_call .)
    +               reduce using rule 34 (expression -> function_call .)
    COLON_COLON     reduce using rule 34 (expression -> function_call .)
    (               reduce using rule 34 (expression -> function_call .)
    ;               reduce using rule 34 (expression -> function_call .)
    ,               reduce using rule 34 (expression -> function_call .)


state 39

    (35) expression -> python_code .
    )               reduce using rule 35 (expression -> python_code .)
    >               reduce using rule 35 (expression -> python_code .)
    <               reduce using rule 35 (expression -> python_code .)
    &               reduce using rule 35 (expression -> python_code .)
    |               reduce using rule 35 (expression -> python_code .)
    EQ_GREATER      reduce using rule 35 (expression -> python_code .)
    EQ_LESS         reduce using rule 35 (expression -> python_code .)
    EQEQ            reduce using rule 35 (expression -> python_code .)
    %               reduce using rule 35 (expression -> python_code .)
    *               reduce using rule 35 (expression -> python_code .)
    /               reduce using rule 35 (expression -> python_code .)
    -               reduce using rule 35 (expression -> python_code .)
    +               reduce using rule 35 (expression -> python_code .)
    COLON_COLON     reduce using rule 35 (expression -> python_code .)
    (               reduce using rule 35 (expression -> python_code .)
    ;               reduce using rule 35 (expression -> python_code .)
    ,               reduce using rule 35 (expression -> python_code .)


state 40

    (58) id -> ID .
    )               reduce using rule 58 (id -> ID .)
    >               reduce using rule 58 (id -> ID .)
    <               reduce using rule 58 (id -> ID .)
    &               reduce using rule 58 (id -> ID .)
    |               reduce using rule 58 (id -> ID .)
    EQ_GREATER      reduce using rule 58 (id -> ID .)
    EQ_LESS         reduce using rule 58 (id -> ID .)
    EQEQ            reduce using rule 58 (id -> ID .)
    %               reduce using rule 58 (id -> ID .)
    *               reduce using rule 58 (id -> ID .)
    /               reduce using rule 58 (id -> ID .)
    -               reduce using rule 58 (id -> ID .)
    +               reduce using rule 58 (id -> ID .)
    COLON_COLON     reduce using rule 58 (id -> ID .)
    (               reduce using rule 58 (id -> ID .)
    ;               reduce using rule 58 (id -> ID .)
    ,               reduce using rule 58 (id -> ID .)
    =               reduce using rule 58 (id -> ID .)


state 41

    (57) class_attribute -> expression COLON_COLON . ID
    ID              shift and go to state 66


state 42

    (12) function_call -> expression ( . empty )
    (13) function_call -> expression ( . function_arguments )
    (60) empty -> .
    (18) function_arguments -> . kwargs
    (19) function_arguments -> . positional_args , kwargs
    (20) function_arguments -> . positional_args
    (24) kwargs -> . ID = expression
    (25) kwargs -> . kwargs , id = expression
    (22) positional_args -> . expression
    (23) positional_args -> . positional_args , expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    )               reduce using rule 60 (empty -> .)
    ID              shift and go to state 72
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 67
    empty                          shift and go to state 68
    function_arguments             shift and go to state 69
    kwargs                         shift and go to state 70
    positional_args                shift and go to state 71
    id                             shift and go to state 20
    class_attribute                shift and go to state 37
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 43

    (37) expression -> expression > . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 73
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 44

    (38) expression -> expression < . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 74
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 45

    (40) expression -> expression & . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 75
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 46

    (41) expression -> expression | . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 76
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 47

    (42) expression -> expression EQ_GREATER . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 77
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 48

    (43) expression -> expression EQ_LESS . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 78
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 49

    (44) expression -> expression EQEQ . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 79
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 50

    (45) expression -> expression % . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 80
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 51

    (46) expression -> expression * . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 81
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 52

    (47) expression -> expression / . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 82
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 53

    (48) expression -> expression - . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 83
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 54

    (49) expression -> expression + . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 84
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 55

    (11) python_code_stmt -> python_code ; .
    KWORD           reduce using rule 11 (python_code_stmt -> python_code ; .)
    ID              reduce using rule 11 (python_code_stmt -> python_code ; .)
    CLASS           reduce using rule 11 (python_code_stmt -> python_code ; .)
    FUNC            reduce using rule 11 (python_code_stmt -> python_code ; .)
    PYTHON_CODE     reduce using rule 11 (python_code_stmt -> python_code ; .)
    (               reduce using rule 11 (python_code_stmt -> python_code ; .)
    !               reduce using rule 11 (python_code_stmt -> python_code ; .)
    +               reduce using rule 11 (python_code_stmt -> python_code ; .)
    -               reduce using rule 11 (python_code_stmt -> python_code ; .)
    STRING          reduce using rule 11 (python_code_stmt -> python_code ; .)
    FALSE           reduce using rule 11 (python_code_stmt -> python_code ; .)
    TRUE            reduce using rule 11 (python_code_stmt -> python_code ; .)
    FLOAT           reduce using rule 11 (python_code_stmt -> python_code ; .)
    INT             reduce using rule 11 (python_code_stmt -> python_code ; .)
    $end            reduce using rule 11 (python_code_stmt -> python_code ; .)
    }               reduce using rule 11 (python_code_stmt -> python_code ; .)


state 56

    (27) class_attribute_assignment -> class_attribute = . expression ;
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    class_attribute                shift and go to state 37
    expression                     shift and go to state 85
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 57

    (10) function_call_stmt -> function_call ; .
    KWORD           reduce using rule 10 (function_call_stmt -> function_call ; .)
    ID              reduce using rule 10 (function_call_stmt -> function_call ; .)
    CLASS           reduce using rule 10 (function_call_stmt -> function_call ; .)
    FUNC            reduce using rule 10 (function_call_stmt -> function_call ; .)
    PYTHON_CODE     reduce using rule 10 (function_call_stmt -> function_call ; .)
    (               reduce using rule 10 (function_call_stmt -> function_call ; .)
    !               reduce using rule 10 (function_call_stmt -> function_call ; .)
    +               reduce using rule 10 (function_call_stmt -> function_call ; .)
    -               reduce using rule 10 (function_call_stmt -> function_call ; .)
    STRING          reduce using rule 10 (function_call_stmt -> function_call ; .)
    FALSE           reduce using rule 10 (function_call_stmt -> function_call ; .)
    TRUE            reduce using rule 10 (function_call_stmt -> function_call ; .)
    FLOAT           reduce using rule 10 (function_call_stmt -> function_call ; .)
    INT             reduce using rule 10 (function_call_stmt -> function_call ; .)
    $end            reduce using rule 10 (function_call_stmt -> function_call ; .)
    }               reduce using rule 10 (function_call_stmt -> function_call ; .)


state 58

    (21) class_declaration -> CLASS ID . { program }
    {               shift and go to state 86


state 59

    (14) function_declaration -> FUNC ID . ( empty ) { program }
    (15) function_declaration -> FUNC ID . ( function_arguments ) { program }
    (               shift and go to state 87


state 60

    (39) expression -> ! expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 39 (expression -> ! expression .)
    (               reduce using rule 39 (expression -> ! expression .)
    >               reduce using rule 39 (expression -> ! expression .)
    <               reduce using rule 39 (expression -> ! expression .)
    &               reduce using rule 39 (expression -> ! expression .)
    |               reduce using rule 39 (expression -> ! expression .)
    EQ_GREATER      reduce using rule 39 (expression -> ! expression .)
    EQ_LESS         reduce using rule 39 (expression -> ! expression .)
    EQEQ            reduce using rule 39 (expression -> ! expression .)
    %               reduce using rule 39 (expression -> ! expression .)
    *               reduce using rule 39 (expression -> ! expression .)
    /               reduce using rule 39 (expression -> ! expression .)
    -               reduce using rule 39 (expression -> ! expression .)
    +               reduce using rule 39 (expression -> ! expression .)
    )               reduce using rule 39 (expression -> ! expression .)
    ;               reduce using rule 39 (expression -> ! expression .)
    ,               reduce using rule 39 (expression -> ! expression .)


state 61

    (51) expression -> - expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 51 (expression -> - expression .)
    (               reduce using rule 51 (expression -> - expression .)
    >               reduce using rule 51 (expression -> - expression .)
    <               reduce using rule 51 (expression -> - expression .)
    &               reduce using rule 51 (expression -> - expression .)
    |               reduce using rule 51 (expression -> - expression .)
    EQ_GREATER      reduce using rule 51 (expression -> - expression .)
    EQ_LESS         reduce using rule 51 (expression -> - expression .)
    EQEQ            reduce using rule 51 (expression -> - expression .)
    %               reduce using rule 51 (expression -> - expression .)
    *               reduce using rule 51 (expression -> - expression .)
    /               reduce using rule 51 (expression -> - expression .)
    -               reduce using rule 51 (expression -> - expression .)
    +               reduce using rule 51 (expression -> - expression .)
    )               reduce using rule 51 (expression -> - expression .)
    ;               reduce using rule 51 (expression -> - expression .)
    ,               reduce using rule 51 (expression -> - expression .)


state 62

    (50) expression -> + expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 50 (expression -> + expression .)
    (               reduce using rule 50 (expression -> + expression .)
    >               reduce using rule 50 (expression -> + expression .)
    <               reduce using rule 50 (expression -> + expression .)
    &               reduce using rule 50 (expression -> + expression .)
    |               reduce using rule 50 (expression -> + expression .)
    EQ_GREATER      reduce using rule 50 (expression -> + expression .)
    EQ_LESS         reduce using rule 50 (expression -> + expression .)
    EQEQ            reduce using rule 50 (expression -> + expression .)
    %               reduce using rule 50 (expression -> + expression .)
    *               reduce using rule 50 (expression -> + expression .)
    /               reduce using rule 50 (expression -> + expression .)
    -               reduce using rule 50 (expression -> + expression .)
    +               reduce using rule 50 (expression -> + expression .)
    )               reduce using rule 50 (expression -> + expression .)
    ;               reduce using rule 50 (expression -> + expression .)
    ,               reduce using rule 50 (expression -> + expression .)


state 63

    (16) kword_declaration -> KWORD ID ( . empty ) { program }
    (17) kword_declaration -> KWORD ID ( . function_arguments ) { program }
    (60) empty -> .
    (18) function_arguments -> . kwargs
    (19) function_arguments -> . positional_args , kwargs
    (20) function_arguments -> . positional_args
    (24) kwargs -> . ID = expression
    (25) kwargs -> . kwargs , id = expression
    (22) positional_args -> . expression
    (23) positional_args -> . positional_args , expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    )               reduce using rule 60 (empty -> .)
    ID              shift and go to state 72
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    empty                          shift and go to state 88
    function_arguments             shift and go to state 89
    kwargs                         shift and go to state 70
    positional_args                shift and go to state 71
    expression                     shift and go to state 67
    id                             shift and go to state 20
    class_attribute                shift and go to state 37
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 64

    (26) variable_assignment -> ID = expression . ;
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    ;               shift and go to state 90
    >               shift and go to state 43
    <               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46
    EQ_GREATER      shift and go to state 47
    EQ_LESS         shift and go to state 48
    EQEQ            shift and go to state 49
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54
    COLON_COLON     shift and go to state 41
    (               shift and go to state 42


state 65

    (36) expression -> ( expression ) .
    COLON_COLON     reduce using rule 36 (expression -> ( expression ) .)
    (               reduce using rule 36 (expression -> ( expression ) .)
    >               reduce using rule 36 (expression -> ( expression ) .)
    <               reduce using rule 36 (expression -> ( expression ) .)
    &               reduce using rule 36 (expression -> ( expression ) .)
    |               reduce using rule 36 (expression -> ( expression ) .)
    EQ_GREATER      reduce using rule 36 (expression -> ( expression ) .)
    EQ_LESS         reduce using rule 36 (expression -> ( expression ) .)
    EQEQ            reduce using rule 36 (expression -> ( expression ) .)
    %               reduce using rule 36 (expression -> ( expression ) .)
    *               reduce using rule 36 (expression -> ( expression ) .)
    /               reduce using rule 36 (expression -> ( expression ) .)
    -               reduce using rule 36 (expression -> ( expression ) .)
    +               reduce using rule 36 (expression -> ( expression ) .)
    )               reduce using rule 36 (expression -> ( expression ) .)
    ;               reduce using rule 36 (expression -> ( expression ) .)
    ,               reduce using rule 36 (expression -> ( expression ) .)


state 66

    (57) class_attribute -> expression COLON_COLON ID .
    =               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    COLON_COLON     reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    (               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    >               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    <               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    &               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    |               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    EQ_GREATER      reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    EQ_LESS         reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    EQEQ            reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    %               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    *               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    /               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    -               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    +               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    )               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    ;               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)
    ,               reduce using rule 57 (class_attribute -> expression COLON_COLON ID .)


state 67

    (22) positional_args -> expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    ,               reduce using rule 22 (positional_args -> expression .)
    )               reduce using rule 22 (positional_args -> expression .)
    >               shift and go to state 43
    <               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46
    EQ_GREATER      shift and go to state 47
    EQ_LESS         shift and go to state 48
    EQEQ            shift and go to state 49
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54
    COLON_COLON     shift and go to state 41
    (               shift and go to state 42


state 68

    (12) function_call -> expression ( empty . )
    )               shift and go to state 91


state 69

    (13) function_call -> expression ( function_arguments . )
    )               shift and go to state 92


state 70

    (18) function_arguments -> kwargs .
    (25) kwargs -> kwargs . , id = expression
    )               reduce using rule 18 (function_arguments -> kwargs .)
    ,               shift and go to state 93


state 71

    (19) function_arguments -> positional_args . , kwargs
    (20) function_arguments -> positional_args .
    (23) positional_args -> positional_args . , expression
    ,               shift and go to state 94
    )               reduce using rule 20 (function_arguments -> positional_args .)


state 72

    (24) kwargs -> ID . = expression
    (58) id -> ID .
    =               shift and go to state 95
    >               reduce using rule 58 (id -> ID .)
    <               reduce using rule 58 (id -> ID .)
    &               reduce using rule 58 (id -> ID .)
    |               reduce using rule 58 (id -> ID .)
    EQ_GREATER      reduce using rule 58 (id -> ID .)
    EQ_LESS         reduce using rule 58 (id -> ID .)
    EQEQ            reduce using rule 58 (id -> ID .)
    %               reduce using rule 58 (id -> ID .)
    *               reduce using rule 58 (id -> ID .)
    /               reduce using rule 58 (id -> ID .)
    -               reduce using rule 58 (id -> ID .)
    +               reduce using rule 58 (id -> ID .)
    COLON_COLON     reduce using rule 58 (id -> ID .)
    (               reduce using rule 58 (id -> ID .)
    ,               reduce using rule 58 (id -> ID .)
    )               reduce using rule 58 (id -> ID .)


state 73

    (37) expression -> expression > expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 37 (expression -> expression > expression .)
    (               reduce using rule 37 (expression -> expression > expression .)
    >               reduce using rule 37 (expression -> expression > expression .)
    <               reduce using rule 37 (expression -> expression > expression .)
    &               reduce using rule 37 (expression -> expression > expression .)
    |               reduce using rule 37 (expression -> expression > expression .)
    EQ_GREATER      reduce using rule 37 (expression -> expression > expression .)
    EQ_LESS         reduce using rule 37 (expression -> expression > expression .)
    EQEQ            reduce using rule 37 (expression -> expression > expression .)
    )               reduce using rule 37 (expression -> expression > expression .)
    ;               reduce using rule 37 (expression -> expression > expression .)
    ,               reduce using rule 37 (expression -> expression > expression .)
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54


state 74

    (38) expression -> expression < expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 38 (expression -> expression < expression .)
    (               reduce using rule 38 (expression -> expression < expression .)
    >               reduce using rule 38 (expression -> expression < expression .)
    <               reduce using rule 38 (expression -> expression < expression .)
    &               reduce using rule 38 (expression -> expression < expression .)
    |               reduce using rule 38 (expression -> expression < expression .)
    EQ_GREATER      reduce using rule 38 (expression -> expression < expression .)
    EQ_LESS         reduce using rule 38 (expression -> expression < expression .)
    EQEQ            reduce using rule 38 (expression -> expression < expression .)
    )               reduce using rule 38 (expression -> expression < expression .)
    ;               reduce using rule 38 (expression -> expression < expression .)
    ,               reduce using rule 38 (expression -> expression < expression .)
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54


state 75

    (40) expression -> expression & expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 40 (expression -> expression & expression .)
    (               reduce using rule 40 (expression -> expression & expression .)
    &               reduce using rule 40 (expression -> expression & expression .)
    |               reduce using rule 40 (expression -> expression & expression .)
    )               reduce using rule 40 (expression -> expression & expression .)
    ;               reduce using rule 40 (expression -> expression & expression .)
    ,               reduce using rule 40 (expression -> expression & expression .)
    >               shift and go to state 43
    <               shift and go to state 44
    EQ_GREATER      shift and go to state 47
    EQ_LESS         shift and go to state 48
    EQEQ            shift and go to state 49
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54


state 76

    (41) expression -> expression | expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 41 (expression -> expression | expression .)
    (               reduce using rule 41 (expression -> expression | expression .)
    |               reduce using rule 41 (expression -> expression | expression .)
    )               reduce using rule 41 (expression -> expression | expression .)
    ;               reduce using rule 41 (expression -> expression | expression .)
    ,               reduce using rule 41 (expression -> expression | expression .)
    >               shift and go to state 43
    <               shift and go to state 44
    &               shift and go to state 45
    EQ_GREATER      shift and go to state 47
    EQ_LESS         shift and go to state 48
    EQEQ            shift and go to state 49
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54


state 77

    (42) expression -> expression EQ_GREATER expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 42 (expression -> expression EQ_GREATER expression .)
    (               reduce using rule 42 (expression -> expression EQ_GREATER expression .)
    >               reduce using rule 42 (expression -> expression EQ_GREATER expression .)
    <               reduce using rule 42 (expression -> expression EQ_GREATER expression .)
    &               reduce using rule 42 (expression -> expression EQ_GREATER expression .)
    |               reduce using rule 42 (expression -> expression EQ_GREATER expression .)
    EQ_GREATER      reduce using rule 42 (expression -> expression EQ_GREATER expression .)
    EQ_LESS         reduce using rule 42 (expression -> expression EQ_GREATER expression .)
    EQEQ            reduce using rule 42 (expression -> expression EQ_GREATER expression .)
    )               reduce using rule 42 (expression -> expression EQ_GREATER expression .)
    ;               reduce using rule 42 (expression -> expression EQ_GREATER expression .)
    ,               reduce using rule 42 (expression -> expression EQ_GREATER expression .)
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54


state 78

    (43) expression -> expression EQ_LESS expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 43 (expression -> expression EQ_LESS expression .)
    (               reduce using rule 43 (expression -> expression EQ_LESS expression .)
    >               reduce using rule 43 (expression -> expression EQ_LESS expression .)
    <               reduce using rule 43 (expression -> expression EQ_LESS expression .)
    &               reduce using rule 43 (expression -> expression EQ_LESS expression .)
    |               reduce using rule 43 (expression -> expression EQ_LESS expression .)
    EQ_GREATER      reduce using rule 43 (expression -> expression EQ_LESS expression .)
    EQ_LESS         reduce using rule 43 (expression -> expression EQ_LESS expression .)
    EQEQ            reduce using rule 43 (expression -> expression EQ_LESS expression .)
    )               reduce using rule 43 (expression -> expression EQ_LESS expression .)
    ;               reduce using rule 43 (expression -> expression EQ_LESS expression .)
    ,               reduce using rule 43 (expression -> expression EQ_LESS expression .)
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54


state 79

    (44) expression -> expression EQEQ expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 44 (expression -> expression EQEQ expression .)
    (               reduce using rule 44 (expression -> expression EQEQ expression .)
    &               reduce using rule 44 (expression -> expression EQEQ expression .)
    |               reduce using rule 44 (expression -> expression EQEQ expression .)
    EQEQ            reduce using rule 44 (expression -> expression EQEQ expression .)
    )               reduce using rule 44 (expression -> expression EQEQ expression .)
    ;               reduce using rule 44 (expression -> expression EQEQ expression .)
    ,               reduce using rule 44 (expression -> expression EQEQ expression .)
    >               shift and go to state 43
    <               shift and go to state 44
    EQ_GREATER      shift and go to state 47
    EQ_LESS         shift and go to state 48
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54


state 80

    (45) expression -> expression % expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 45 (expression -> expression % expression .)
    (               reduce using rule 45 (expression -> expression % expression .)
    >               reduce using rule 45 (expression -> expression % expression .)
    <               reduce using rule 45 (expression -> expression % expression .)
    &               reduce using rule 45 (expression -> expression % expression .)
    |               reduce using rule 45 (expression -> expression % expression .)
    EQ_GREATER      reduce using rule 45 (expression -> expression % expression .)
    EQ_LESS         reduce using rule 45 (expression -> expression % expression .)
    EQEQ            reduce using rule 45 (expression -> expression % expression .)
    %               reduce using rule 45 (expression -> expression % expression .)
    *               reduce using rule 45 (expression -> expression % expression .)
    /               reduce using rule 45 (expression -> expression % expression .)
    -               reduce using rule 45 (expression -> expression % expression .)
    +               reduce using rule 45 (expression -> expression % expression .)
    )               reduce using rule 45 (expression -> expression % expression .)
    ;               reduce using rule 45 (expression -> expression % expression .)
    ,               reduce using rule 45 (expression -> expression % expression .)


state 81

    (46) expression -> expression * expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 46 (expression -> expression * expression .)
    (               reduce using rule 46 (expression -> expression * expression .)
    >               reduce using rule 46 (expression -> expression * expression .)
    <               reduce using rule 46 (expression -> expression * expression .)
    &               reduce using rule 46 (expression -> expression * expression .)
    |               reduce using rule 46 (expression -> expression * expression .)
    EQ_GREATER      reduce using rule 46 (expression -> expression * expression .)
    EQ_LESS         reduce using rule 46 (expression -> expression * expression .)
    EQEQ            reduce using rule 46 (expression -> expression * expression .)
    %               reduce using rule 46 (expression -> expression * expression .)
    *               reduce using rule 46 (expression -> expression * expression .)
    /               reduce using rule 46 (expression -> expression * expression .)
    -               reduce using rule 46 (expression -> expression * expression .)
    +               reduce using rule 46 (expression -> expression * expression .)
    )               reduce using rule 46 (expression -> expression * expression .)
    ;               reduce using rule 46 (expression -> expression * expression .)
    ,               reduce using rule 46 (expression -> expression * expression .)


state 82

    (47) expression -> expression / expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 47 (expression -> expression / expression .)
    (               reduce using rule 47 (expression -> expression / expression .)
    >               reduce using rule 47 (expression -> expression / expression .)
    <               reduce using rule 47 (expression -> expression / expression .)
    &               reduce using rule 47 (expression -> expression / expression .)
    |               reduce using rule 47 (expression -> expression / expression .)
    EQ_GREATER      reduce using rule 47 (expression -> expression / expression .)
    EQ_LESS         reduce using rule 47 (expression -> expression / expression .)
    EQEQ            reduce using rule 47 (expression -> expression / expression .)
    %               reduce using rule 47 (expression -> expression / expression .)
    *               reduce using rule 47 (expression -> expression / expression .)
    /               reduce using rule 47 (expression -> expression / expression .)
    -               reduce using rule 47 (expression -> expression / expression .)
    +               reduce using rule 47 (expression -> expression / expression .)
    )               reduce using rule 47 (expression -> expression / expression .)
    ;               reduce using rule 47 (expression -> expression / expression .)
    ,               reduce using rule 47 (expression -> expression / expression .)


state 83

    (48) expression -> expression - expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 48 (expression -> expression - expression .)
    (               reduce using rule 48 (expression -> expression - expression .)
    >               reduce using rule 48 (expression -> expression - expression .)
    <               reduce using rule 48 (expression -> expression - expression .)
    &               reduce using rule 48 (expression -> expression - expression .)
    |               reduce using rule 48 (expression -> expression - expression .)
    EQ_GREATER      reduce using rule 48 (expression -> expression - expression .)
    EQ_LESS         reduce using rule 48 (expression -> expression - expression .)
    EQEQ            reduce using rule 48 (expression -> expression - expression .)
    -               reduce using rule 48 (expression -> expression - expression .)
    +               reduce using rule 48 (expression -> expression - expression .)
    )               reduce using rule 48 (expression -> expression - expression .)
    ;               reduce using rule 48 (expression -> expression - expression .)
    ,               reduce using rule 48 (expression -> expression - expression .)
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52


state 84

    (49) expression -> expression + expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    COLON_COLON     reduce using rule 49 (expression -> expression + expression .)
    (               reduce using rule 49 (expression -> expression + expression .)
    >               reduce using rule 49 (expression -> expression + expression .)
    <               reduce using rule 49 (expression -> expression + expression .)
    &               reduce using rule 49 (expression -> expression + expression .)
    |               reduce using rule 49 (expression -> expression + expression .)
    EQ_GREATER      reduce using rule 49 (expression -> expression + expression .)
    EQ_LESS         reduce using rule 49 (expression -> expression + expression .)
    EQEQ            reduce using rule 49 (expression -> expression + expression .)
    -               reduce using rule 49 (expression -> expression + expression .)
    +               reduce using rule 49 (expression -> expression + expression .)
    )               reduce using rule 49 (expression -> expression + expression .)
    ;               reduce using rule 49 (expression -> expression + expression .)
    ,               reduce using rule 49 (expression -> expression + expression .)
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52


state 85

    (27) class_attribute_assignment -> class_attribute = expression . ;
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    ;               shift and go to state 96
    >               shift and go to state 43
    <               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46
    EQ_GREATER      shift and go to state 47
    EQ_LESS         shift and go to state 48
    EQEQ            shift and go to state 49
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54
    COLON_COLON     shift and go to state 41
    (               shift and go to state 42


state 86

    (21) class_declaration -> CLASS ID { . program }
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . kword_declaration
    (4) statement -> . variable_assignment
    (5) statement -> . python_code_stmt
    (6) statement -> . class_attribute_assignment
    (7) statement -> . function_call_stmt
    (8) statement -> . class_declaration
    (9) statement -> . function_declaration
    (16) kword_declaration -> . KWORD ID ( empty ) { program }
    (17) kword_declaration -> . KWORD ID ( function_arguments ) { program }
    (26) variable_assignment -> . ID = expression ;
    (11) python_code_stmt -> . python_code ;
    (27) class_attribute_assignment -> . class_attribute = expression ;
    (10) function_call_stmt -> . function_call ;
    (21) class_declaration -> . CLASS ID { program }
    (14) function_declaration -> . FUNC ID ( empty ) { program }
    (15) function_declaration -> . FUNC ID ( function_arguments ) { program }
    (59) python_code -> . PYTHON_CODE
    (57) class_attribute -> . expression COLON_COLON ID
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    KWORD           shift and go to state 10
    ID              shift and go to state 11
    CLASS           shift and go to state 17
    FUNC            shift and go to state 18
    PYTHON_CODE     shift and go to state 19
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32

    program                        shift and go to state 97
    statement                      shift and go to state 2
    kword_declaration              shift and go to state 3
    variable_assignment            shift and go to state 4
    python_code_stmt               shift and go to state 5
    class_attribute_assignment     shift and go to state 6
    function_call_stmt             shift and go to state 7
    class_declaration              shift and go to state 8
    function_declaration           shift and go to state 9
    expression                     shift and go to state 13
    python_code                    shift and go to state 14
    class_attribute                shift and go to state 15
    function_call                  shift and go to state 16
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24

state 87

    (14) function_declaration -> FUNC ID ( . empty ) { program }
    (15) function_declaration -> FUNC ID ( . function_arguments ) { program }
    (60) empty -> .
    (18) function_arguments -> . kwargs
    (19) function_arguments -> . positional_args , kwargs
    (20) function_arguments -> . positional_args
    (24) kwargs -> . ID = expression
    (25) kwargs -> . kwargs , id = expression
    (22) positional_args -> . expression
    (23) positional_args -> . positional_args , expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    )               reduce using rule 60 (empty -> .)
    ID              shift and go to state 72
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    empty                          shift and go to state 98
    function_arguments             shift and go to state 99
    kwargs                         shift and go to state 70
    positional_args                shift and go to state 71
    expression                     shift and go to state 67
    id                             shift and go to state 20
    class_attribute                shift and go to state 37
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 88

    (16) kword_declaration -> KWORD ID ( empty . ) { program }
    )               shift and go to state 100


state 89

    (17) kword_declaration -> KWORD ID ( function_arguments . ) { program }
    )               shift and go to state 101


state 90

    (26) variable_assignment -> ID = expression ; .
    KWORD           reduce using rule 26 (variable_assignment -> ID = expression ; .)
    ID              reduce using rule 26 (variable_assignment -> ID = expression ; .)
    CLASS           reduce using rule 26 (variable_assignment -> ID = expression ; .)
    FUNC            reduce using rule 26 (variable_assignment -> ID = expression ; .)
    PYTHON_CODE     reduce using rule 26 (variable_assignment -> ID = expression ; .)
    (               reduce using rule 26 (variable_assignment -> ID = expression ; .)
    !               reduce using rule 26 (variable_assignment -> ID = expression ; .)
    +               reduce using rule 26 (variable_assignment -> ID = expression ; .)
    -               reduce using rule 26 (variable_assignment -> ID = expression ; .)
    STRING          reduce using rule 26 (variable_assignment -> ID = expression ; .)
    FALSE           reduce using rule 26 (variable_assignment -> ID = expression ; .)
    TRUE            reduce using rule 26 (variable_assignment -> ID = expression ; .)
    FLOAT           reduce using rule 26 (variable_assignment -> ID = expression ; .)
    INT             reduce using rule 26 (variable_assignment -> ID = expression ; .)
    $end            reduce using rule 26 (variable_assignment -> ID = expression ; .)
    }               reduce using rule 26 (variable_assignment -> ID = expression ; .)


state 91

    (12) function_call -> expression ( empty ) .
    ;               reduce using rule 12 (function_call -> expression ( empty ) .)
    COLON_COLON     reduce using rule 12 (function_call -> expression ( empty ) .)
    (               reduce using rule 12 (function_call -> expression ( empty ) .)
    >               reduce using rule 12 (function_call -> expression ( empty ) .)
    <               reduce using rule 12 (function_call -> expression ( empty ) .)
    &               reduce using rule 12 (function_call -> expression ( empty ) .)
    |               reduce using rule 12 (function_call -> expression ( empty ) .)
    EQ_GREATER      reduce using rule 12 (function_call -> expression ( empty ) .)
    EQ_LESS         reduce using rule 12 (function_call -> expression ( empty ) .)
    EQEQ            reduce using rule 12 (function_call -> expression ( empty ) .)
    %               reduce using rule 12 (function_call -> expression ( empty ) .)
    *               reduce using rule 12 (function_call -> expression ( empty ) .)
    /               reduce using rule 12 (function_call -> expression ( empty ) .)
    -               reduce using rule 12 (function_call -> expression ( empty ) .)
    +               reduce using rule 12 (function_call -> expression ( empty ) .)
    )               reduce using rule 12 (function_call -> expression ( empty ) .)
    ,               reduce using rule 12 (function_call -> expression ( empty ) .)


state 92

    (13) function_call -> expression ( function_arguments ) .
    ;               reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    COLON_COLON     reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    (               reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    >               reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    <               reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    &               reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    |               reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    EQ_GREATER      reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    EQ_LESS         reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    EQEQ            reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    %               reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    *               reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    /               reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    -               reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    +               reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    )               reduce using rule 13 (function_call -> expression ( function_arguments ) .)
    ,               reduce using rule 13 (function_call -> expression ( function_arguments ) .)


state 93

    (25) kwargs -> kwargs , . id = expression
    (58) id -> . ID
    ID              shift and go to state 40

    id                             shift and go to state 102

state 94

    (19) function_arguments -> positional_args , . kwargs
    (23) positional_args -> positional_args , . expression
    (24) kwargs -> . ID = expression
    (25) kwargs -> . kwargs , id = expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    ID              shift and go to state 72
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    kwargs                         shift and go to state 103
    expression                     shift and go to state 104
    id                             shift and go to state 20
    class_attribute                shift and go to state 37
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 95

    (24) kwargs -> ID = . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    expression                     shift and go to state 105
    class_attribute                shift and go to state 37
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 96

    (27) class_attribute_assignment -> class_attribute = expression ; .
    KWORD           reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    ID              reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    CLASS           reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    FUNC            reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    PYTHON_CODE     reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    (               reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    !               reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    +               reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    -               reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    STRING          reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    FALSE           reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    TRUE            reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    FLOAT           reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    INT             reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    $end            reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)
    }               reduce using rule 27 (class_attribute_assignment -> class_attribute = expression ; .)


state 97

    (21) class_declaration -> CLASS ID { program . }
    (2) program -> program . statement
    (3) statement -> . kword_declaration
    (4) statement -> . variable_assignment
    (5) statement -> . python_code_stmt
    (6) statement -> . class_attribute_assignment
    (7) statement -> . function_call_stmt
    (8) statement -> . class_declaration
    (9) statement -> . function_declaration
    (16) kword_declaration -> . KWORD ID ( empty ) { program }
    (17) kword_declaration -> . KWORD ID ( function_arguments ) { program }
    (26) variable_assignment -> . ID = expression ;
    (11) python_code_stmt -> . python_code ;
    (27) class_attribute_assignment -> . class_attribute = expression ;
    (10) function_call_stmt -> . function_call ;
    (21) class_declaration -> . CLASS ID { program }
    (14) function_declaration -> . FUNC ID ( empty ) { program }
    (15) function_declaration -> . FUNC ID ( function_arguments ) { program }
    (59) python_code -> . PYTHON_CODE
    (57) class_attribute -> . expression COLON_COLON ID
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    }               shift and go to state 106
    KWORD           shift and go to state 10
    ID              shift and go to state 11
    CLASS           shift and go to state 17
    FUNC            shift and go to state 18
    PYTHON_CODE     shift and go to state 19
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32

    statement                      shift and go to state 33
    kword_declaration              shift and go to state 3
    variable_assignment            shift and go to state 4
    python_code_stmt               shift and go to state 5
    class_attribute_assignment     shift and go to state 6
    function_call_stmt             shift and go to state 7
    class_declaration              shift and go to state 8
    function_declaration           shift and go to state 9
    expression                     shift and go to state 13
    python_code                    shift and go to state 14
    class_attribute                shift and go to state 15
    function_call                  shift and go to state 16
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24

state 98

    (14) function_declaration -> FUNC ID ( empty . ) { program }
    )               shift and go to state 107


state 99

    (15) function_declaration -> FUNC ID ( function_arguments . ) { program }
    )               shift and go to state 108


state 100

    (16) kword_declaration -> KWORD ID ( empty ) . { program }
    {               shift and go to state 109


state 101

    (17) kword_declaration -> KWORD ID ( function_arguments ) . { program }
    {               shift and go to state 110


state 102

    (25) kwargs -> kwargs , id . = expression
    =               shift and go to state 111


state 103

    (19) function_arguments -> positional_args , kwargs .
    (25) kwargs -> kwargs . , id = expression
    )               reduce using rule 19 (function_arguments -> positional_args , kwargs .)
    ,               shift and go to state 93


state 104

    (23) positional_args -> positional_args , expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    ,               reduce using rule 23 (positional_args -> positional_args , expression .)
    )               reduce using rule 23 (positional_args -> positional_args , expression .)
    >               shift and go to state 43
    <               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46
    EQ_GREATER      shift and go to state 47
    EQ_LESS         shift and go to state 48
    EQEQ            shift and go to state 49
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54
    COLON_COLON     shift and go to state 41
    (               shift and go to state 42


state 105

    (24) kwargs -> ID = expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    ,               reduce using rule 24 (kwargs -> ID = expression .)
    )               reduce using rule 24 (kwargs -> ID = expression .)
    >               shift and go to state 43
    <               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46
    EQ_GREATER      shift and go to state 47
    EQ_LESS         shift and go to state 48
    EQEQ            shift and go to state 49
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54
    COLON_COLON     shift and go to state 41
    (               shift and go to state 42


state 106

    (21) class_declaration -> CLASS ID { program } .
    KWORD           reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    ID              reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    CLASS           reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    FUNC            reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    PYTHON_CODE     reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    (               reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    !               reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    +               reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    -               reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    STRING          reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    FALSE           reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    TRUE            reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    FLOAT           reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    INT             reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    $end            reduce using rule 21 (class_declaration -> CLASS ID { program } .)
    }               reduce using rule 21 (class_declaration -> CLASS ID { program } .)


state 107

    (14) function_declaration -> FUNC ID ( empty ) . { program }
    {               shift and go to state 112


state 108

    (15) function_declaration -> FUNC ID ( function_arguments ) . { program }
    {               shift and go to state 113


state 109

    (16) kword_declaration -> KWORD ID ( empty ) { . program }
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . kword_declaration
    (4) statement -> . variable_assignment
    (5) statement -> . python_code_stmt
    (6) statement -> . class_attribute_assignment
    (7) statement -> . function_call_stmt
    (8) statement -> . class_declaration
    (9) statement -> . function_declaration
    (16) kword_declaration -> . KWORD ID ( empty ) { program }
    (17) kword_declaration -> . KWORD ID ( function_arguments ) { program }
    (26) variable_assignment -> . ID = expression ;
    (11) python_code_stmt -> . python_code ;
    (27) class_attribute_assignment -> . class_attribute = expression ;
    (10) function_call_stmt -> . function_call ;
    (21) class_declaration -> . CLASS ID { program }
    (14) function_declaration -> . FUNC ID ( empty ) { program }
    (15) function_declaration -> . FUNC ID ( function_arguments ) { program }
    (59) python_code -> . PYTHON_CODE
    (57) class_attribute -> . expression COLON_COLON ID
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    KWORD           shift and go to state 10
    ID              shift and go to state 11
    CLASS           shift and go to state 17
    FUNC            shift and go to state 18
    PYTHON_CODE     shift and go to state 19
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32

    program                        shift and go to state 114
    statement                      shift and go to state 2
    kword_declaration              shift and go to state 3
    variable_assignment            shift and go to state 4
    python_code_stmt               shift and go to state 5
    class_attribute_assignment     shift and go to state 6
    function_call_stmt             shift and go to state 7
    class_declaration              shift and go to state 8
    function_declaration           shift and go to state 9
    expression                     shift and go to state 13
    python_code                    shift and go to state 14
    class_attribute                shift and go to state 15
    function_call                  shift and go to state 16
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24

state 110

    (17) kword_declaration -> KWORD ID ( function_arguments ) { . program }
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . kword_declaration
    (4) statement -> . variable_assignment
    (5) statement -> . python_code_stmt
    (6) statement -> . class_attribute_assignment
    (7) statement -> . function_call_stmt
    (8) statement -> . class_declaration
    (9) statement -> . function_declaration
    (16) kword_declaration -> . KWORD ID ( empty ) { program }
    (17) kword_declaration -> . KWORD ID ( function_arguments ) { program }
    (26) variable_assignment -> . ID = expression ;
    (11) python_code_stmt -> . python_code ;
    (27) class_attribute_assignment -> . class_attribute = expression ;
    (10) function_call_stmt -> . function_call ;
    (21) class_declaration -> . CLASS ID { program }
    (14) function_declaration -> . FUNC ID ( empty ) { program }
    (15) function_declaration -> . FUNC ID ( function_arguments ) { program }
    (59) python_code -> . PYTHON_CODE
    (57) class_attribute -> . expression COLON_COLON ID
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    KWORD           shift and go to state 10
    ID              shift and go to state 11
    CLASS           shift and go to state 17
    FUNC            shift and go to state 18
    PYTHON_CODE     shift and go to state 19
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32

    program                        shift and go to state 115
    statement                      shift and go to state 2
    kword_declaration              shift and go to state 3
    variable_assignment            shift and go to state 4
    python_code_stmt               shift and go to state 5
    class_attribute_assignment     shift and go to state 6
    function_call_stmt             shift and go to state 7
    class_declaration              shift and go to state 8
    function_declaration           shift and go to state 9
    expression                     shift and go to state 13
    python_code                    shift and go to state 14
    class_attribute                shift and go to state 15
    function_call                  shift and go to state 16
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24

state 111

    (25) kwargs -> kwargs , id = . expression
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (57) class_attribute -> . expression COLON_COLON ID
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (59) python_code -> . PYTHON_CODE
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    ID              shift and go to state 40
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32
    PYTHON_CODE     shift and go to state 19

    id                             shift and go to state 20
    expression                     shift and go to state 116
    class_attribute                shift and go to state 37
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24
    function_call                  shift and go to state 38
    python_code                    shift and go to state 39

state 112

    (14) function_declaration -> FUNC ID ( empty ) { . program }
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . kword_declaration
    (4) statement -> . variable_assignment
    (5) statement -> . python_code_stmt
    (6) statement -> . class_attribute_assignment
    (7) statement -> . function_call_stmt
    (8) statement -> . class_declaration
    (9) statement -> . function_declaration
    (16) kword_declaration -> . KWORD ID ( empty ) { program }
    (17) kword_declaration -> . KWORD ID ( function_arguments ) { program }
    (26) variable_assignment -> . ID = expression ;
    (11) python_code_stmt -> . python_code ;
    (27) class_attribute_assignment -> . class_attribute = expression ;
    (10) function_call_stmt -> . function_call ;
    (21) class_declaration -> . CLASS ID { program }
    (14) function_declaration -> . FUNC ID ( empty ) { program }
    (15) function_declaration -> . FUNC ID ( function_arguments ) { program }
    (59) python_code -> . PYTHON_CODE
    (57) class_attribute -> . expression COLON_COLON ID
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    KWORD           shift and go to state 10
    ID              shift and go to state 11
    CLASS           shift and go to state 17
    FUNC            shift and go to state 18
    PYTHON_CODE     shift and go to state 19
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32

    program                        shift and go to state 117
    statement                      shift and go to state 2
    kword_declaration              shift and go to state 3
    variable_assignment            shift and go to state 4
    python_code_stmt               shift and go to state 5
    class_attribute_assignment     shift and go to state 6
    function_call_stmt             shift and go to state 7
    class_declaration              shift and go to state 8
    function_declaration           shift and go to state 9
    expression                     shift and go to state 13
    python_code                    shift and go to state 14
    class_attribute                shift and go to state 15
    function_call                  shift and go to state 16
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24

state 113

    (15) function_declaration -> FUNC ID ( function_arguments ) { . program }
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . kword_declaration
    (4) statement -> . variable_assignment
    (5) statement -> . python_code_stmt
    (6) statement -> . class_attribute_assignment
    (7) statement -> . function_call_stmt
    (8) statement -> . class_declaration
    (9) statement -> . function_declaration
    (16) kword_declaration -> . KWORD ID ( empty ) { program }
    (17) kword_declaration -> . KWORD ID ( function_arguments ) { program }
    (26) variable_assignment -> . ID = expression ;
    (11) python_code_stmt -> . python_code ;
    (27) class_attribute_assignment -> . class_attribute = expression ;
    (10) function_call_stmt -> . function_call ;
    (21) class_declaration -> . CLASS ID { program }
    (14) function_declaration -> . FUNC ID ( empty ) { program }
    (15) function_declaration -> . FUNC ID ( function_arguments ) { program }
    (59) python_code -> . PYTHON_CODE
    (57) class_attribute -> . expression COLON_COLON ID
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    KWORD           shift and go to state 10
    ID              shift and go to state 11
    CLASS           shift and go to state 17
    FUNC            shift and go to state 18
    PYTHON_CODE     shift and go to state 19
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32

    program                        shift and go to state 118
    statement                      shift and go to state 2
    kword_declaration              shift and go to state 3
    variable_assignment            shift and go to state 4
    python_code_stmt               shift and go to state 5
    class_attribute_assignment     shift and go to state 6
    function_call_stmt             shift and go to state 7
    class_declaration              shift and go to state 8
    function_declaration           shift and go to state 9
    expression                     shift and go to state 13
    python_code                    shift and go to state 14
    class_attribute                shift and go to state 15
    function_call                  shift and go to state 16
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24

state 114

    (16) kword_declaration -> KWORD ID ( empty ) { program . }
    (2) program -> program . statement
    (3) statement -> . kword_declaration
    (4) statement -> . variable_assignment
    (5) statement -> . python_code_stmt
    (6) statement -> . class_attribute_assignment
    (7) statement -> . function_call_stmt
    (8) statement -> . class_declaration
    (9) statement -> . function_declaration
    (16) kword_declaration -> . KWORD ID ( empty ) { program }
    (17) kword_declaration -> . KWORD ID ( function_arguments ) { program }
    (26) variable_assignment -> . ID = expression ;
    (11) python_code_stmt -> . python_code ;
    (27) class_attribute_assignment -> . class_attribute = expression ;
    (10) function_call_stmt -> . function_call ;
    (21) class_declaration -> . CLASS ID { program }
    (14) function_declaration -> . FUNC ID ( empty ) { program }
    (15) function_declaration -> . FUNC ID ( function_arguments ) { program }
    (59) python_code -> . PYTHON_CODE
    (57) class_attribute -> . expression COLON_COLON ID
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    }               shift and go to state 119
    KWORD           shift and go to state 10
    ID              shift and go to state 11
    CLASS           shift and go to state 17
    FUNC            shift and go to state 18
    PYTHON_CODE     shift and go to state 19
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32

    statement                      shift and go to state 33
    kword_declaration              shift and go to state 3
    variable_assignment            shift and go to state 4
    python_code_stmt               shift and go to state 5
    class_attribute_assignment     shift and go to state 6
    function_call_stmt             shift and go to state 7
    class_declaration              shift and go to state 8
    function_declaration           shift and go to state 9
    expression                     shift and go to state 13
    python_code                    shift and go to state 14
    class_attribute                shift and go to state 15
    function_call                  shift and go to state 16
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24

state 115

    (17) kword_declaration -> KWORD ID ( function_arguments ) { program . }
    (2) program -> program . statement
    (3) statement -> . kword_declaration
    (4) statement -> . variable_assignment
    (5) statement -> . python_code_stmt
    (6) statement -> . class_attribute_assignment
    (7) statement -> . function_call_stmt
    (8) statement -> . class_declaration
    (9) statement -> . function_declaration
    (16) kword_declaration -> . KWORD ID ( empty ) { program }
    (17) kword_declaration -> . KWORD ID ( function_arguments ) { program }
    (26) variable_assignment -> . ID = expression ;
    (11) python_code_stmt -> . python_code ;
    (27) class_attribute_assignment -> . class_attribute = expression ;
    (10) function_call_stmt -> . function_call ;
    (21) class_declaration -> . CLASS ID { program }
    (14) function_declaration -> . FUNC ID ( empty ) { program }
    (15) function_declaration -> . FUNC ID ( function_arguments ) { program }
    (59) python_code -> . PYTHON_CODE
    (57) class_attribute -> . expression COLON_COLON ID
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    }               shift and go to state 120
    KWORD           shift and go to state 10
    ID              shift and go to state 11
    CLASS           shift and go to state 17
    FUNC            shift and go to state 18
    PYTHON_CODE     shift and go to state 19
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32

    statement                      shift and go to state 33
    kword_declaration              shift and go to state 3
    variable_assignment            shift and go to state 4
    python_code_stmt               shift and go to state 5
    class_attribute_assignment     shift and go to state 6
    function_call_stmt             shift and go to state 7
    class_declaration              shift and go to state 8
    function_declaration           shift and go to state 9
    expression                     shift and go to state 13
    python_code                    shift and go to state 14
    class_attribute                shift and go to state 15
    function_call                  shift and go to state 16
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24

state 116

    (25) kwargs -> kwargs , id = expression .
    (37) expression -> expression . > expression
    (38) expression -> expression . < expression
    (40) expression -> expression . & expression
    (41) expression -> expression . | expression
    (42) expression -> expression . EQ_GREATER expression
    (43) expression -> expression . EQ_LESS expression
    (44) expression -> expression . EQEQ expression
    (45) expression -> expression . % expression
    (46) expression -> expression . * expression
    (47) expression -> expression . / expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    (57) class_attribute -> expression . COLON_COLON ID
    (12) function_call -> expression . ( empty )
    (13) function_call -> expression . ( function_arguments )
    ,               reduce using rule 25 (kwargs -> kwargs , id = expression .)
    )               reduce using rule 25 (kwargs -> kwargs , id = expression .)
    >               shift and go to state 43
    <               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46
    EQ_GREATER      shift and go to state 47
    EQ_LESS         shift and go to state 48
    EQEQ            shift and go to state 49
    %               shift and go to state 50
    *               shift and go to state 51
    /               shift and go to state 52
    -               shift and go to state 53
    +               shift and go to state 54
    COLON_COLON     shift and go to state 41
    (               shift and go to state 42


state 117

    (14) function_declaration -> FUNC ID ( empty ) { program . }
    (2) program -> program . statement
    (3) statement -> . kword_declaration
    (4) statement -> . variable_assignment
    (5) statement -> . python_code_stmt
    (6) statement -> . class_attribute_assignment
    (7) statement -> . function_call_stmt
    (8) statement -> . class_declaration
    (9) statement -> . function_declaration
    (16) kword_declaration -> . KWORD ID ( empty ) { program }
    (17) kword_declaration -> . KWORD ID ( function_arguments ) { program }
    (26) variable_assignment -> . ID = expression ;
    (11) python_code_stmt -> . python_code ;
    (27) class_attribute_assignment -> . class_attribute = expression ;
    (10) function_call_stmt -> . function_call ;
    (21) class_declaration -> . CLASS ID { program }
    (14) function_declaration -> . FUNC ID ( empty ) { program }
    (15) function_declaration -> . FUNC ID ( function_arguments ) { program }
    (59) python_code -> . PYTHON_CODE
    (57) class_attribute -> . expression COLON_COLON ID
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    }               shift and go to state 121
    KWORD           shift and go to state 10
    ID              shift and go to state 11
    CLASS           shift and go to state 17
    FUNC            shift and go to state 18
    PYTHON_CODE     shift and go to state 19
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32

    statement                      shift and go to state 33
    kword_declaration              shift and go to state 3
    variable_assignment            shift and go to state 4
    python_code_stmt               shift and go to state 5
    class_attribute_assignment     shift and go to state 6
    function_call_stmt             shift and go to state 7
    class_declaration              shift and go to state 8
    function_declaration           shift and go to state 9
    expression                     shift and go to state 13
    python_code                    shift and go to state 14
    class_attribute                shift and go to state 15
    function_call                  shift and go to state 16
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24

state 118

    (15) function_declaration -> FUNC ID ( function_arguments ) { program . }
    (2) program -> program . statement
    (3) statement -> . kword_declaration
    (4) statement -> . variable_assignment
    (5) statement -> . python_code_stmt
    (6) statement -> . class_attribute_assignment
    (7) statement -> . function_call_stmt
    (8) statement -> . class_declaration
    (9) statement -> . function_declaration
    (16) kword_declaration -> . KWORD ID ( empty ) { program }
    (17) kword_declaration -> . KWORD ID ( function_arguments ) { program }
    (26) variable_assignment -> . ID = expression ;
    (11) python_code_stmt -> . python_code ;
    (27) class_attribute_assignment -> . class_attribute = expression ;
    (10) function_call_stmt -> . function_call ;
    (21) class_declaration -> . CLASS ID { program }
    (14) function_declaration -> . FUNC ID ( empty ) { program }
    (15) function_declaration -> . FUNC ID ( function_arguments ) { program }
    (59) python_code -> . PYTHON_CODE
    (57) class_attribute -> . expression COLON_COLON ID
    (12) function_call -> . expression ( empty )
    (13) function_call -> . expression ( function_arguments )
    (28) expression -> . class_attribute
    (29) expression -> . id
    (30) expression -> . string
    (31) expression -> . bool
    (32) expression -> . float
    (33) expression -> . int
    (34) expression -> . function_call
    (35) expression -> . python_code
    (36) expression -> . ( expression )
    (37) expression -> . expression > expression
    (38) expression -> . expression < expression
    (39) expression -> . ! expression
    (40) expression -> . expression & expression
    (41) expression -> . expression | expression
    (42) expression -> . expression EQ_GREATER expression
    (43) expression -> . expression EQ_LESS expression
    (44) expression -> . expression EQEQ expression
    (45) expression -> . expression % expression
    (46) expression -> . expression * expression
    (47) expression -> . expression / expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . + expression
    (51) expression -> . - expression
    (58) id -> . ID
    (53) string -> . STRING
    (55) bool -> . FALSE
    (56) bool -> . TRUE
    (54) float -> . FLOAT
    (52) int -> . INT
    }               shift and go to state 122
    KWORD           shift and go to state 10
    ID              shift and go to state 11
    CLASS           shift and go to state 17
    FUNC            shift and go to state 18
    PYTHON_CODE     shift and go to state 19
    (               shift and go to state 12
    !               shift and go to state 25
    +               shift and go to state 27
    -               shift and go to state 26
    STRING          shift and go to state 28
    FALSE           shift and go to state 29
    TRUE            shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 32

    statement                      shift and go to state 33
    kword_declaration              shift and go to state 3
    variable_assignment            shift and go to state 4
    python_code_stmt               shift and go to state 5
    class_attribute_assignment     shift and go to state 6
    function_call_stmt             shift and go to state 7
    class_declaration              shift and go to state 8
    function_declaration           shift and go to state 9
    expression                     shift and go to state 13
    python_code                    shift and go to state 14
    class_attribute                shift and go to state 15
    function_call                  shift and go to state 16
    id                             shift and go to state 20
    string                         shift and go to state 21
    bool                           shift and go to state 22
    float                          shift and go to state 23
    int                            shift and go to state 24

state 119

    (16) kword_declaration -> KWORD ID ( empty ) { program } .
    KWORD           reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    ID              reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    CLASS           reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    FUNC            reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    PYTHON_CODE     reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    (               reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    !               reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    +               reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    -               reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    STRING          reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    FALSE           reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    TRUE            reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    FLOAT           reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    INT             reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    $end            reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)
    }               reduce using rule 16 (kword_declaration -> KWORD ID ( empty ) { program } .)


state 120

    (17) kword_declaration -> KWORD ID ( function_arguments ) { program } .
    KWORD           reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    ID              reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    CLASS           reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    FUNC            reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    PYTHON_CODE     reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    (               reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    !               reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    +               reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    -               reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    STRING          reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    FALSE           reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    TRUE            reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    FLOAT           reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    INT             reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    $end            reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)
    }               reduce using rule 17 (kword_declaration -> KWORD ID ( function_arguments ) { program } .)


state 121

    (14) function_declaration -> FUNC ID ( empty ) { program } .
    KWORD           reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    ID              reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    CLASS           reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    FUNC            reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    PYTHON_CODE     reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    (               reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    !               reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    +               reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    -               reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    STRING          reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    FALSE           reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    TRUE            reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    FLOAT           reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    INT             reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    $end            reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)
    }               reduce using rule 14 (function_declaration -> FUNC ID ( empty ) { program } .)


state 122

    (15) function_declaration -> FUNC ID ( function_arguments ) { program } .
    KWORD           reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    ID              reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    CLASS           reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    FUNC            reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    PYTHON_CODE     reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    (               reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    !               reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    +               reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    -               reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    STRING          reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    FALSE           reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    TRUE            reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    FLOAT           reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    INT             reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    $end            reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
    }               reduce using rule 15 (function_declaration -> FUNC ID ( function_arguments ) { program } .)
